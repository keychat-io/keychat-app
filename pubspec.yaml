name: keychat_workspace
sdkPath: .fvm/flutter_sdk

environment:
  sdk: ">=3.7.0 <4.0.0"
workspace:
  - packages/app
  - packages/aws
  - packages/keychat_ecash
  - packages/keychat_rust_ffi_plugin

dev_dependencies:
  melos: ^7.0.0-dev.8
  flutter_lints: ^5.0.0
  test: ^1.21.0

melos:
  name: keychat_workspace
  repository: https://github.com/key-chat/app-melos

  ignore:
    - packages/app/build/**
    - packages/keychat_rust_ffi_plugin/cargokit/**

  scripts:
    postclean:
      run: melos run clean:flutter --no-select
      description: Runs "flutter clean" in all Flutter packages

    lint:all:
      run: melos run analyze && melos run format
      description: Run all static analysis checks

    analyze:all:
      run: melos run analyze && melos run metrics
      description: Run all

    analyze:
      run: |
        melos exec -c 5 --ignore="*example*" -- \
          dart analyze --fatal-infos .
      description: |
        Run `dart analyze` in all packages.
        - Note: you can also rely on your IDEs Dart Analysis / Issues window.

    format:
      run: dart format --set-exit-if-changed .
      description: |
        Run `dart format --set-exit-if-changed .` in all packages.

    metrics:
      run: |
        melos exec -c 1 --ignore="*example*" -- \
          flutter pub run dart_code_metrics:metrics analyze lib
      description: |
        Run `dart_code_metrics` in all packages.
        - Note: you can also rely on your IDEs Dart Analysis / Issues window.

    generate:all:
      run: melos run generate:dart && melos run generate:flutter
      description: Build all generated files for Dart & Flutter packages in this project.

    generate:dart:
      run: melos exec -c 1 --depends-on="build_runner" --no-flutter -- "dart run build_runner build --delete-conflicting-outputs"
      description: Build all generated files for Dart packages in this project.

    generate:flutter:
      run: melos exec -c 1 --depends-on="build_runner" --flutter -- "flutter pub run build_runner build --delete-conflicting-outputs"
      description: Build all generated files for Flutter packages in this project.

    test:all:
      run: melos run test:dart --no-select && melos run test:flutter --no-select
      description: Run all Dart & Flutter tests in this project.

    test:dart:
      run: melos exec -c 1 --fail-fast -- "flutter test --coverage"
      description: Run Dart tests for a specific package in this project.
      packageFilters:
        flutter: false
        dirExists: test

    test:flutter:
      run: melos exec -c 4 --fail-fast -- "flutter test --coverage"
      description: Run Flutter tests for a specific package in this project.
      packageFilters:
        flutter: true
        dirExists: test

    clean:flutter:
      run: melos exec -c 4 --fail-fast -- "flutter clean && flutter pub get && rm -rf ios/Podfile.lock && cd ios && pod repo update && pod install"
      description: Run Flutter clean for a specific package in this project.
      packageFilters:
        flutter: true

    coverage:ignore-file:
      run: |
        melos exec -c 5 --fail-fast -- "\$MELOS_ROOT_PATH/.github/workflows/scripts/remove-from-coverage.sh"
      description: Removes all the ignored files from the coverage report.
      packageFilters:
        dirExists: coverage

    docs:
      run: |
        npm install -g https://github.com/GetStream/stream-chat-docusaurus-cli &&
        npx stream-chat-docusaurus -i -s
      description: Runs the docusaurus documentation locally.

    intl:generate:
      name: app_intl
      description: "generate intl utils for mobile packages"
      run: cd packages/app && fvm flutter pub run intl_utils:generate

    build:runner:
      name: app_build_runner
      description: "app build runner"
      run: cd packages/app && fvm flutter pub run build_runner build --delete-conflicting-outputs

    pod:install:
      name: pod_install_app
      description: "pod install"
      steps:
        - cd packages/app/ios && pod update && pod install --repo-update
        - cd ../macos && pod update && pod install --repo-update

    core:intl:generate:
      name: core_intl
      description: "generate intl utils for core package"
      run: cd shared/core && fvm flutter pub run intl_utils:generate

    app:get:
      name: app_get
      description: "run app pub get only"
      run: cd packages/app && fvm flutter pub get

    image:gen:
      name: gen_image
      description: "generate assets class"
      run: bash scripts/image_gen.sh

    pre:env:
      name: prepare_env
      description: "prepare env"
      run: bash scripts/prepare_env.sh

    build:ios:
      name: build_ios
      description: "build ios"
      run: bash scripts/build_ios.sh
    build:macos:
      name: build_ios
      description: "build ios"
      run: bash scripts/build_macos.sh
    build:aab:
      name: build_aab
      description: "build aab"
      run: bash scripts/build_aab.sh
    build:android:
      name: build_ios
      description: "build android"
      run: bash scripts/build_android.sh
    build:win:
      name: build_windows
      description: "build windows exe"
      steps:
        - git pull origin
        - git submodule update --remote
        - cd packages/app
        - fastforge package --platform windows --targets exe --flutter-build-args=verbose
        - explorer ".\build\dist\"
    build:linux:
      name: build_linux
      description: "build linux app"
      steps:
        - git pull origin
        - git submodule update --remote
        - cd packages/app
        - fastforge package --platform linux --flutter-build-args=verbose
        - explorer ".\build\dist\"
    sha256:
      name: sha256
      description: "generate sha256"
      steps:
        - cd packages/app/build/dist
        - for file in $(find . -type f -not -name "*.sha256"); do sha256sum "$file" > "${file}.sha256"; done
    ide:
      intellij:
        enabled: false
