name: build
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - debug
      environment:
        description: "Deployment environment"
        required: false
        type: string
  push:
    branches:
      - "workflow"
    tags:
      - "v*"
env:
  IS_STABLE: ${{ !contains(github.ref, '-') }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # - platform: android
          #   os: ubuntu-latest
          # - platform: windows
          #   os: windows-latest
          #   arch: amd64
          - platform: linux
            os: ubuntu-22.04
            arch: amd64
          # - platform: macos
          #   os: macos-latest
          #   arch: arm64

    steps:
      - name: Setup rust
        if: startsWith(matrix.os, 'windows-11-arm')
        run: |
          Invoke-WebRequest -Uri "https://win.rustup.rs/aarch64" -OutFile rustup-init.exe
          .\rustup-init.exe -y --default-toolchain stable
          $cargoPath = "$env:USERPROFILE\.cargo\bin"
          Add-Content $env:GITHUB_PATH $cargoPath

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 2

      # - name: Setup Android Signing
      #   if: startsWith(matrix.platform,'android')
      #   run: |
      #     echo "${{ secrets.KEYSTORE }}" | base64 --decode > android/app/keystore.jks
      #     echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/local.properties
      #     echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/local.properties
      #     echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/local.properties
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.1"
          cache: true
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "29.3"
      - name: Install melos
        run: dart pub global activate melos 7.0.0-dev.9
      - name: Setup-fastforge
        run: |
          dart pub global activate fastforge
          fastforge --version
      - name: Setup-Linux
        if: ${{matrix.platform == 'linux'}}
        run: |
          echo "Building for platform: ${{ matrix.platform }}"
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libnss3 libasound2 libgbm-dev
          cargo install flutter_rust_bridge_codegen@2.9.0
          rustup target add x86_64-unknown-linux-gnu aarch64-unknown-linux-gnu
      - name: Run melos bootstrap
        run: |
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          melos bootstrap
      - name: Build-Linux-APP
        if: ${{matrix.platform == 'linux'}}
        working-directory: ./packages/app/
        run: |
          echo "PROJECT_NAME=Keychat" > .env
          ls -la
          fastforge package --platform=linux --flutter-build-args=verbose
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.platform }}${{ matrix.arch && format('-{0}', matrix.arch) }}
          path: ./dist
          overwrite: true
